from decimal import Decimal
from telebot import types
from bot.database import create_db_connection

def setup_history_handlers(bot):
    @bot.message_handler(commands=['history'])
    def show_history(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π"""
        connection = None
        try:
            # –ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            try:
                page = int(message.text.split()[1]) if len(message.text.split()) > 1 else 1
                page = max(1, page)
            except ValueError:
                page = 1

            connection = create_db_connection()
            if not connection:
                bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ")
                return

            with connection.cursor(dictionary=True) as cursor:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                cursor.execute("SELECT id FROM users WHERE telegram_id = %s", (message.from_user.id,))
                user = cursor.fetchone()

                if not user:
                    bot.reply_to(message, "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
                    return

                # –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
                cursor.execute("""
                    SELECT COUNT(*) as total 
                    FROM transactions 
                    WHERE sender_id = %s OR receiver_id = %s
                """, (user['id'], user['id']))
                total = cursor.fetchone()['total']
                pages = max(1, (total + 9) // 10)

                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                cursor.execute("""
                    SELECT 
                        t.amount,
                        t.timestamp,
                        sender.nickname as sender_nick,
                        receiver.nickname as receiver_nick,
                        t.sender_id,
                        t.receiver_id,
                        t.currency
                    FROM transactions t
                    JOIN users sender ON t.sender_id = sender.id
                    JOIN users receiver ON t.receiver_id = receiver.id
                    WHERE t.sender_id = %s OR t.receiver_id = %s
                    ORDER BY t.timestamp DESC
                    LIMIT 10 OFFSET %s
                """, (user['id'], user['id'], (page - 1) * 10))

                transactions = cursor.fetchall()

                if transactions:
                    history = []
                    for t in transactions:
                        amount = Decimal(t['amount']).quantize(Decimal('0.00'))
                        timestamp = t['timestamp'].strftime('%d.%m %H:%M')
                        currency = t['currency'].upper()

                        if t['sender_id'] == user['id']:
                            entry = (
                                f"üî¥ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {amount} {currency}\n"
                                f"‚Üí –î–ª—è: {t['receiver_nick']}\n"
                                f"‚è∞ {timestamp}"
                            )
                        else:
                            entry = (
                                f"üü¢ –ü–æ–ª—É—á–µ–Ω–æ: {amount} {currency}\n"
                                f"‚Üê –û—Ç: {t['sender_nick']}\n"
                                f"‚è∞ {timestamp}"
                            )
                        history.append(entry)

                    response = (
                        f"üìú –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π (—Å—Ç—Ä. {page}/{pages}):\n\n" +
                        "\n\n".join(history) +
                        f"\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /history <–Ω–æ–º–µ—Ä> –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"
                    )
                else:
                    response = "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π"

                bot.send_message(message.chat.id, response)

        except Exception as e:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏")
            print(f"History error: {e}")
        finally:
            if connection:
                connection.close()