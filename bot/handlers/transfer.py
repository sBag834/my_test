from telebot import types
from decimal import Decimal, InvalidOperation
from bot.database import create_db_connection
from bot.utils.decorators import log_errors
from bot.utils.notifications import notify_transfer
import logging
from html import escape

logger = logging.getLogger(__name__)


def setup_transfer_handlers(bot):
    @bot.message_handler(commands=['tr'])
    @log_errors("transfer_command")
    def handle_transfer(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
        /tr <–≤–∞–ª—é—Ç–∞:es/ar> <–Ω–∏–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è> <—Å—É–º–º–∞>
        """
        try:
            # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
            args = message.text.split()[1:]

            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
            if len(args) != 3:
                bot.reply_to(
                    message,
                    "‚ùå *–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!*\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /tr <–≤–∞–ª—é—Ç–∞> <–Ω–∏–∫> <—Å—É–º–º–∞>\n"
                    "–ü—Ä–∏–º–µ—Ä: /tr es –ò–≥—Ä–æ–∫123 100.50\n"
                    "–í–∞–ª—é—Ç—ã: es (–≠—Å—Å–µ–Ω—Ü–∏—è), ar (–ê—Ä—ã)\n"
                    "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5% ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è",
                    parse_mode="Markdown"
                )
                return

            currency, receiver_nick, amount_str = args
            currency = currency.lower()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª—é—Ç—ã
            if currency not in {'es', 'ar'}:
                bot.reply_to(
                    message,
                    "‚ùå *–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –≤–∞–ª—é—Ç–∞!*\n"
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n"
                    "- `es` –¥–ª—è –≠—Å—Å–µ–Ω—Ü–∏–∏\n"
                    "- `ar` –¥–ª—è –ê—Ä–æ–≤\n"
                    "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5% ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è",
                    parse_mode="Markdown"
                )
                return

            # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—É–º–º—ã
            try:
                amount = Decimal(amount_str).quantize(Decimal('0.00'))
                if amount <= Decimal('0'):
                    raise ValueError
            except (ValueError, InvalidOperation):
                bot.reply_to(
                    message,
                    "‚ùå *–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞!*\n"
                    "–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞:\n"
                    "- `100`\n"
                    "- `50.5`\n"
                    "- `75.00`\n"
                    "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5% ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è",
                    parse_mode="Markdown"
                )
                return

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
            process_transfer(
                bot=bot,
                sender_id=message.from_user.id,
                currency=currency,
                receiver_nick=receiver_nick,
                amount=amount
            )

        except Exception as e:
            logger.error(f"Transfer error: {str(e)}", exc_info=True)
            bot.reply_to(message, "‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–µ—Ä–µ–≤–æ–¥–∞")


def process_transfer(bot, sender_id: int, currency: str, receiver_nick: str, amount: Decimal):
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞"""
    connection = None
    cursor = None
    try:
        connection = create_db_connection()
        if not connection:
            bot.send_message(sender_id, "üîß –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
            return

        cursor = connection.cursor(dictionary=True)

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        cursor.execute(
            "SELECT id, nickname, balance, balance_ar FROM users WHERE telegram_id = %s",
            (sender_id,)
        )
        sender = cursor.fetchone()

        if not sender:
            bot.send_message(sender_id, "‚ùå –í—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return

        # –ü–æ–∏—Å–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        cursor.execute(
            "SELECT id, nickname, telegram_id FROM users WHERE nickname = %s AND id != %s",
            (receiver_nick, sender['id'])
        )
        receiver = cursor.fetchone()

        if not receiver:
            bot.send_message(sender_id, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{receiver_nick} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        #–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ç–æ —Å–∫–∏–¥—ã–≤–∞–µ—Ç –¥–µ–Ω—å–≥–∏, –µ—Å–ª–∏ —Å–≤—è–∑–∞–Ω–Ω–æ —Å –±–∞–Ω–∫–æ–º —Ç–æ –Ω–∏—Ç –∫–æ–º–º–∏—Å–∏–∏
        if receiver['telegram_id'] == '0000000000':
            tax = Decimal('0.0')
            amount_tax = amount + tax
        elif currency == 'es':
            tax = Decimal('0.0')
            amount_tax = amount + tax
        else:
            tax = amount * Decimal('0.05')
            amount_tax = amount + tax

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        balance_field = 'balance' if currency == 'es' else 'balance_ar'
        sender_balance = sender.get(balance_field, Decimal('0'))
        currency_name = '–≠—Å—Å–µ–Ω—Ü–∏–∏' if currency == 'es' else '–ê—Ä–æ–≤'

        if sender_balance < amount_tax and currency == 'ar':
            bot.send_message(
                sender_id,
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ {currency_name}!\n"
                f"–í–∞—à –±–∞–ª–∞–Ω—Å: {sender_balance:.2f}\n"
                "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5% ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è"
            )
            return
        elif sender_balance < amount_tax and currency == 'es':
            bot.send_message(
                sender_id,
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ {currency_name}!\n"
                f"–í–∞—à –±–∞–ª–∞–Ω—Å: {sender_balance:.2f}"
            )
            return


        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        try:
            cursor.execute("START TRANSACTION")

            # –°–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
            cursor.execute(
                f"UPDATE users SET {balance_field} = {balance_field} - %s WHERE id = %s",
                (float(amount_tax), sender['id'])
            )

            # –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ –±–∞–Ω–∫—É
            bank_field = 'balance' if currency == 'es' else 'balance_ar'
            cursor.execute(
                f"UPDATE users SET {bank_field} = {bank_field} + %s WHERE id = %s",
                (float(tax), '3')
            )

            # –ó–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
            receiver_field = 'balance' if currency == 'es' else 'balance_ar'
            cursor.execute(
                f"UPDATE users SET {receiver_field} = {receiver_field} + %s WHERE id = %s",
                (float(amount), receiver['id'])
            )

            # –ó–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é
            cursor.execute(
                "INSERT INTO transactions (sender_id, receiver_id, amount, currency) VALUES (%s, %s, %s, %s)",
                (sender['id'], receiver['id'], float(amount), currency)
            )

            connection.commit()

            # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏–∫–Ω–µ–π–º–∞—Ö
            safe_sender_nick = escape(sender['nickname'])
            safe_receiver_nick = escape(receiver['nickname'])

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
            new_balance = sender_balance - amount_tax
            bot.send_message(
                sender_id,
                f"‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!\n\n"
                f"–°—É–º–º–∞: {amount:.2f} {currency_name}\n"
                f"–ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–∏–ª–∞: {tax:.2f}\n"
                f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {safe_receiver_nick}\n"
                f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance:.2f}"
            )

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
            if receiver.get('telegram_id'):
                try:
                    bot.send_message(
                        receiver['telegram_id'],
                        f"üí∏ –í–∞–º –ø–µ—Ä–µ–≤–µ–ª–∏ {amount:.2f} {currency_name} –æ—Ç {safe_sender_nick}"
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {str(e)}")

        except Exception as e:
            connection.rollback()
            logger.error(f"Transaction failed: {str(e)}")
            bot.send_message(sender_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        finally:
            if connection.is_connected():
                cursor.close()

    except Exception as e:
        logger.error(f"Transfer process error: {str(e)}", exc_info=True)
    finally:
        if connection:
            connection.close()