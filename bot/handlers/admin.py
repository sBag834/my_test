from telebot import types
from decimal import Decimal
from bot.database import create_db_connection
from bot.utils.decorators import admin_required
from bot.utils.exchange import get_exchange_rate
from bot.utils.notifications import notify_admins
import logging

logger = logging.getLogger(__name__)


def setup_admin_handlers(bot):
    @bot.message_handler(commands=['bl'])
    @admin_required("‚õî –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
    def handle_admin_balance(message):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞ (–∞–¥–º–∏–Ω—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞)"""
        connection = None
        try:
            args = message.text.split()[1:]
            if not args:
                bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞: /bl <–Ω–∏–∫>")
                return

            nickname = ' '.join(args).strip()
            connection = create_db_connection()

            if not connection:
                bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                return

            with connection.cursor(dictionary=True) as cursor:
                cursor.execute("""
                    SELECT balance, balance_ar, nickname 
                    FROM users 
                    WHERE nickname = %s
                """, (nickname,))
                user_data = cursor.fetchone()

                if not user_data:
                    bot.reply_to(message, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return

                # –û–±—Ä–∞–±–æ—Ç–∫–∞ NULL-–∑–Ω–∞—á–µ–Ω–∏–π
                balance_es = user_data['balance'] or Decimal('0')
                balance_ar = user_data['balance_ar'] or Decimal('0')

                rate = get_exchange_rate()
                conversion_text = ""
                if rate and rate > 0:
                    converted_ar = balance_es * rate
                    conversion_text = f"\n  ‚âà {converted_ar:.2f} Ar (–∫—É—Ä—Å {rate:.2f} Ar/–≠—Å)"

                response = (
                    f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å:\n"
                    f"–ù–∏–∫: {user_data['nickname']}\n"
                    f"üí∞ –≠—Å—Å–µ–Ω—Ü–∏—è: {balance_es:.2f} –≠—Å{conversion_text}\n"
                    f"üí∞ –ê—Ä—ã: {balance_ar:.2f} Ar"
                )
                bot.reply_to(message, response)

        except Exception as e:
            logger.error(f"Admin balance error: {str(e)}", exc_info=True)
            bot.reply_to(message, "‚õî –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã")
        finally:
            if connection:
                connection.close()

